#!/bin/bash
#author: Alan Huang, Justin Zhao
#date 12/10/2015
#Description: this is the pdu control script
#


. check_board
source board_op



# Usage information 
usage()
{
    echo "Usage: board_reboot [Num] [on|off|reboot]"
    echo "To power on, off or reboot specify boards, default to reboot board num=1 without any parameters!"
    echo "    Num:            To operate the specified board assigned to user, Num is an interger board index which must be greater than 0, default to operate board num=1."
    echo "    on|off|reboot:  To specify a power operation, default to reboot."
    exit 0
} 



# take power action,
# the parameter is pud_ip, pdu outlet and operation on:1,off=2,reboot=3
# include d01 d02 1610 and othe other boards without BMC
board_op_power_pdu()
{
    OPER=3
    case $1 in 
    "on")
	OPER=1
	;;
    "off")
	OPER=2
	;;
    "reboot")
	OPER=3
	;;
    *)
	usage
    exit
 	;;
    esac
    # power on board
    $PDU_POWER_CMD $PDU_HOST $OUTLET $OPER
    echo ""  
}



# power option:  boards wiht BMC,such as d03
board_op_power_bmc()
{
    # action on power
    case $1 in 
    "on" | "off" )
         ipmitool -H $BMCIP -I $IPMI_INTERFACE -U $ACCOUNT -P $PASSWORD $IPMI_POWER_CMD $1 
         ;;
    "reboot")
         ipmitool -H $BMCIP -I $IPMI_INTERFACE -U $ACCOUNT -P $PASSWORD $IPMI_POWER_CMD off 
         sleep 3
         ipmitool -H $BMCIP -I $IPMI_INTERFACE -U $ACCOUNT -P $PASSWORD $IPMI_POWER_CMD on 
         ;;
    *)
         usage
         ;;
    esac
}



# according to SERIALTYPE and POWERTYPE to take different function
#
board_op_power()
{
    if [ "$SERIALTYPE" = "ipmi" -a "$POWERTYPE" = "BMC" ]; then
        get_bmc_config "board_reboot"
        board_op_power_bmc $1

    elif [ "$SERIALTYPE" = "telnet" -a "$POWERTYPE" = "PDU" ]; then
        get_pdu_config "board_reboot"
	board_op_power_pdu $1
    #elif ...
    fi
}



# befre you take power action on board,need to check the board if is used
# if not be used ,then you can take power action
# if it is using, there is two different cases, the one is you had already connected is,so you do it
# if it is used by other user, you can't do it 
board_op()
{
    # Check the whether the board is being used, and send the operation command
    if [ "$SERIALTYPE" = "ipmi" ]; then
        current=`ps -o ruser=userForLongName -e -o pid,ppid,c,stime,tty,time,cmd | grep $SERIALTYPE | grep $BMCIP | cut -d " " -f1`
    elif [ "$SERIALTYPE" = "telnet" ]; then
	current=`ps -o ruser=userForLongName -e -o pid,ppid,c,stime,tty,time,cmd  | grep $SERIALTYPE | grep $PORT | cut -d " " -f1`
    fi
    
    if [ "$current" = "" ];then
        board_op_power $1	
	echo ""
    else
        current_user=`grep -w $current $USERCFG | cut -d ":" -f1`
        if [ "$current_user" = "$USERNAME" ];then
	    board_op_power $1
        else
            email=`grep -w $current $USERCFG`
            email=${email#*email=}
            email=${email%%,*}
            echo "              ********WARNING********"
            echo "  $email is using the board"
            echo "  Please wait until he/she  finishes the work"
            echo "  Or you can contact with him by email."
        fi
     fi
}



# according to the parameter num to take different handle
# if num=0, the cmd like board_reboot,the default is reboot the board num=1
# if num=1, the cmd like this: board_reboot num(board num) or board_reboot on|off|reboot(defaul operation board num=1) 
# if num=2, the cmd like this: board num on|off|reboot
# else ,the cmd is wrong

if [ $# = 0 ]; then
    board_op reboot
    exit
elif [ $# = 1 ]; then
    if [ "$1" -gt 0 ] 2>/dev/null; then
        board_op reboot
    else
        case $1 in
	"on"|"off"|"reboot")
	    board_op $1
	    ;;
        *)
	    usage
            ;;
         esac
     fi
     exit
elif [ $# = 2 ]; then
    if [ $1 -gt 0 ] 2>/dev/null; then
        case $2 in
	"on"|"off"|"reboot")
	    board_op $2
            ;;
        *)
            usage
            ;;
         esac
     fi
else
    usage
fi
























